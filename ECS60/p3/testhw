#! /bin/bash

testingDirectory=/home/ssdavis/60/p3/Testing
if [ $# -ne 1 ]; then
  echo "testhw usage: testhw huffman_src_directory"
  exit
fi

cd $1
rm -f *.out *.o result*.txt &> /dev/null

echo -n "Scores from p3 for " > results.txt

if [ -e authors.csv ]; then
  dos2unix -q authors.csv
  awk -F, '{printf"%s,%s ", $2, $3}' authors.csv >> results.txt
  awk -F, '{printf"%s,%s\n", $2, $3}' authors.csv > names.txt
  echo -e "\n\nNote that format is: e-mail<comma>last name<comma>first name" >> results.txt
  echo "For example: ssdavis@ucdavis.edu,Davis,Sean"  >> results.txt
  awk -F, {'printf"%s ", $1'} authors.csv > addresses
else
  echo  "You need to create an authors.csv file!!!! No one will receive credit for this assignment"  >> results.txt
  echo "$1@ucdavis.edu" > addresses
  finger ${PWD##*/} | awk 'NR == 1 {printf"%s,%s", $5, $4}' > names.txt
fi

echo -en "\nAddresses used: " >> results.txt
cat addresses >> results.txt
echo " " >> results.txt
echo "Directory: $1"
score=0
rm -f *.out *.o BinaryHeap.* vector.* dsexcept* out*.txt >& /dev/null

if [ -e huffman.cpp ];  then
  cp $testingDirectory/BinaryHeap.* $testingDirectory/vector.* $testingDirectory/dsexcept* . >& /dev/null
  g++ huffman.cpp >& /dev/null

  if [ -e a.out ]; then
    echo 'davisHuffman.txt (7 points):' >> results.txt
    (a.out $testingDirectory/davisHuffman.txt | sort > out1.txt)&
    sleep 2
    pkill a.out 
    rm core >& /dev/null
    diff --ignore-all-space out1.txt $testingDirectory/out1.txt > temp

    if [ ! -s temp ] && [ -s out1.txt  ] ; then
      echo OK >> results.txt
      (( score += 7 ))
    else
      echo "Yours: " >> results.txt
      cat out1.txt >> results.txt
      echo "Sean's: " >> results.txt
      cat $testingDirectory/out1.txt >> results.txt
    fi
    echo " " >> results.txt

    echo 'AvlTree.cpp (4 points):' >> results.txt
    (a.out $testingDirectory/AvlTree.cpp |  sed 's/ //g' > out2.txt)&
    sleep 2
    pkill a.out
    rm core >& /dev/null

    if [[ `cat out2.txt | wc -c` -eq `cat $testingDirectory/out2.txt | wc -c`  ]] ; then
      echo OK >> results.txt
      (( score += 4 ))
    else
      echo "Differences in number of characters." >> results.txt
      echo "Yours: " >> results.txt
      cat out2.txt >> results.txt
      echo "Sean's: " >> results.txt
      cat $testingDirectory/out2.txt >> results.txt
    fi
    echo " " >> results.txt

    echo 'linux.words (4 points):' >> results.txt
    (a.out $testingDirectory/linux.words | grep "^[23]" | sed 's/ //g' > out3.txt)&
    sleep 2
    pkill a.out
    rm core >& /dev/null

    if [[ `cat out3.txt | wc -c` -eq `cat $testingDirectory/out3.txt | wc -c`  ]] ; then
      echo OK >> results.txt
      (( score += 4 ))
    else
      echo "Differences in number of characters for 2 and 3." >> results.txt
      echo "Yours: " >> results.txt
      cat out3.txt >> results.txt
      echo "Sean's: " >> results.txt
      cat $testingDirectory/out3.txt >> results.txt
    fi
    echo " " >> results.txt
  else

    echo No a.out. >> results.txt
  fi
else
  echo No files for authors found >> results.txt
fi

echo " " >> results.txt
echo "Total score: $score" >> results.txt

#mailx -s "ECS 60 P3 Test Results" `cat addresses` < results.txt

#awk 'NR == 1 {printf"%s,", $0}' names.txt >> ../results.csv
#echo "${1%%/},$score" >> ../results.csv
#authorCount=$(grep "@" authors.csv | wc -l)

#if [ $authorCount -gt 1 ]; then
#  awk 'NR == 2 {printf"%s,", $0}' names.txt >> ../results.csv
#  echo "${1%%/},$score" >> ../results.csv
#fi
                     
cd ..
